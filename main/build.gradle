plugins {
    id("org.springframework.boot")
}

apply plugin: ComponentTestsPlugin

dependencies {

    implementation "org.springframework.boot:spring-boot-starter"

    runtimeOnly project(":customers:customers-domain")
    runtimeOnly project(":customers:customers-web")
    runtimeOnly project(":customers:customers-persistence")

    runtimeOnly project(":orders:orders-domain")
    runtimeOnly project(":orders:orders-web")
    runtimeOnly project(":orders:orders-persistence")

    runtimeOnly project(":notifications:notifications-domain")
    runtimeOnly project(":notifications:notifications-web")
    runtimeOnly project(":notifications:notifications-persistence")

    runtimeOnly "org.springframework.boot:spring-boot-starter-actuator"

    componentTestImplementation project(":test-container-util");
    componentTestImplementation "io.rest-assured:rest-assured"
    componentTestImplementation "io.rest-assured:json-path"

    componentTestImplementation "io.eventuate.platform.testcontainer.support:eventuate-platform-testcontainer-support-service:$eventuatePlatformTestContainerSupportVersion"
    componentTestImplementation "io.eventuate.common:eventuate-common-testcontainers"
    componentTestImplementation "org.springframework.boot:spring-boot-starter-web"

}

tasks.findByName("check").mustRunAfter(rootProject.subprojects.findAll { it != project}.collect { ":${it.path}:check"})
